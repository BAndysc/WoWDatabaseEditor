<Controls:MetroWindow x:Class="WoWDatabaseEditorCore.WPF.Views.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:prism="http://prismlibrary.com/"
                      xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
                      prism:ViewModelLocator.AutoWireViewModel="True"
                      xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
                      xmlns:system="clr-namespace:System;assembly=System.Runtime"
                      xmlns:commonUtils="clr-namespace:WDE.Common.Utils;assembly=WDE.Common"
                      xmlns:viewHelpers="clr-namespace:WDE.Common.ViewHelpers;assembly=WDE.Common"
                      xmlns:menuItems="clr-namespace:WDE.Common.Providers;assembly=WDE.Common"
                      xmlns:utils1="clr-namespace:WDE.Common.WPF.Utils;assembly=WDE.Common.WPF"
                      xmlns:helpers="clr-namespace:WoWDatabaseEditorCore.WPF.Views.Helpers"
                      xmlns:views="clr-namespace:WoWDatabaseEditorCore.WPF.Views"
                      xmlns:utils="clr-namespace:WoWDatabaseEditorCore.WPF.Utils"
                      xmlns:viewHelpers1="clr-namespace:WDE.Common.WPF.ViewHelpers;assembly=WDE.Common.WPF"
                      xmlns:extensions="clr-namespace:WoWDatabaseEditorCore.WPF.Extensions"
                      Style="{DynamicResource MainWindowStyle}"
                      Title="{Binding Title}"
                      WindowStartupLocation="CenterScreen"
                      Height="695.368"
                      Width="959.421"
                      Icon="/Icon.ico"
                      extensions:GlobalMenuHotKeys.MenuItemsGestures="{Binding MenuItemProviders}"
                      x:Name="rootWindow">
    <Controls:MetroWindow.WindowButtonCommands>
        <Controls:WindowButtonCommands
            LightCloseButtonStyle="{DynamicResource MetroWindowButtonStyle}"
            LightMinButtonStyle="{DynamicResource MetroWindowButtonStyle}"
            LightMaxButtonStyle="{DynamicResource MetroWindowButtonStyle}" />
    </Controls:MetroWindow.WindowButtonCommands>
    <Window.Resources>
        <viewHelpers1:BooleanToVisibilityConverter WhenTrue="Visible" WhenFalse="Hidden" x:Key="BooleanToHiddenVisibilityConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <helpers:ActiveDocumentConverter x:Key="ActiveDocumentConverter" />
        <helpers:DocumentOrToolToTitleConverter x:Key="DocumentOrToolToTitleConverter" />
    </Window.Resources>
    <Controls:MetroWindow.IconTemplate>
        <DataTemplate>
            <Grid Width="{TemplateBinding Width}"
                  Height="{TemplateBinding Height}"
                  Margin="5"
                  Background="Transparent"
                  RenderOptions.EdgeMode="Aliased"
                  RenderOptions.BitmapScalingMode="HighQuality">
                <Image Source="/Icon.ico" />
            </Grid>
        </DataTemplate>
    </Controls:MetroWindow.IconTemplate>
    
    <Controls:MetroWindow.LeftWindowCommands>
        <Controls:WindowCommands>
            <StackPanel Name="menuHolder" Orientation="Horizontal">
                <Menu DockPanel.Dock="Top" Margin="2" ItemsSource="{Binding MenuItemProviders}">
                    <Menu.ItemContainerStyleSelector>
                        <helpers:DynamicMenuItemStyleSelector>
                            <helpers:DynamicMenuItemStyleSelector.MainMenuItemStyle>
                                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MetroMenuItem}">
                                    <Setter Property="Header" Value="{Binding ItemName}"/>
                                    <Setter Property="ItemsSource" Value="{Binding SubItems}" />
                                </Style>
                            </helpers:DynamicMenuItemStyleSelector.MainMenuItemStyle>
                            <helpers:DynamicMenuItemStyleSelector.CategoryItemStyle>
                                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MetroMenuItem}">
                                    <Setter Property="Header" Value="{Binding ItemName}"/>
                                    <Setter Property="ItemsSource" Value="{Binding CategoryItems}" />
                                </Style>
                            </helpers:DynamicMenuItemStyleSelector.CategoryItemStyle>
                            <helpers:DynamicMenuItemStyleSelector.DocumentItemStyle>
                                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MetroMenuItem}">
                                    <Setter Property="Header" Value="{Binding ItemName}"/>
                                    <Setter Property="Command" Value="{Binding ElementName=rootWindow, Path=DataContext.OpenDocument}" />
                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                </Style>
                            </helpers:DynamicMenuItemStyleSelector.DocumentItemStyle>
                            <helpers:DynamicMenuItemStyleSelector.CommandItemStyle>
                                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MetroMenuItem}">
                                    <Setter Property="Header" Value="{Binding ItemName}"/>
                                    <Setter Property="Command" Value="{Binding ItemCommand}" />
                                    <Setter Property="InputGestureText" Value="{Binding Shortcut.InputShortcutText}"/>
                                </Style>
                            </helpers:DynamicMenuItemStyleSelector.CommandItemStyle>
                            <helpers:DynamicMenuItemStyleSelector.SeparatorItemStyle>
                                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MetroMenuItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Separator />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </helpers:DynamicMenuItemStyleSelector.SeparatorItemStyle>
                        </helpers:DynamicMenuItemStyleSelector>
                    </Menu.ItemContainerStyleSelector>
                </Menu>
            </StackPanel>
        </Controls:WindowCommands>
    </Controls:MetroWindow.LeftWindowCommands>
    <Controls:MetroWindow.TitleTemplate>
        <DataTemplate>
            <TextBlock Text="{TemplateBinding Content}"
                       TextTrimming="CharacterEllipsis"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       FontSize="{DynamicResource WindowTitleFontSize}"
                       FontFamily="{DynamicResource HeaderFontFamily}" />
        </DataTemplate>
    </Controls:MetroWindow.TitleTemplate>
    <DockPanel>
        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Background="{DynamicResource MainWindowCaptionActiveBackground}">
            <Button Margin="5,0,0,0" Command="{Binding ExecuteChangedCommand}" Content="Execute" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" />
            <Button Command="{Binding GenerateCurrentSqlCommand}" Content="Generate SQL" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" />
        </StackPanel>
        <views:StatusBarView DockPanel.Dock="Bottom" Height="20" DataContext="{Binding StatusBar}" />
        <Grid>
            <DockingManager
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                AnchorablesSource="{Binding DocumentManager.OpenedTools}" x:Name="DockingManager"
                DocumentClosed="DockingManager_OnDocumentClosed"
                ActiveContent="{Binding DocumentManager.ActiveDocument,Mode=TwoWay, 
            diag:PresentationTraceSources.TraceLevel=High,Converter={StaticResource ActiveDocumentConverter}}"
                DocumentsSource="{Binding DocumentManager.OpenedDocuments}">
                <DockingManager.Resources>
                    <Style TargetType="LayoutDocumentControl" BasedOn="{StaticResource {x:Type LayoutDocumentControl}}">
                        <Setter Property="Focusable" Value="False"></Setter>
                    </Style>
                </DockingManager.Resources>
                <DockingManager.LayoutUpdateStrategy>
                    <utils:LayoutInitializer />
                </DockingManager.LayoutUpdateStrategy>
                <DockingManager.LayoutItemTemplateSelector>
                    <views:PaneDocumentTemplateSelector>
                        <views:PaneDocumentTemplateSelector.DocumentTemplate>
                            <DataTemplate>
                                <ContentPresenter Content="{Binding}" DockPanel.Dock="Left">
                                    <ContentPresenter.Style>
                                        <Style TargetType="{x:Type ContentPresenter}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsLoading}">
                                                    <DataTrigger.Value>
                                                        <system:Boolean>True</system:Boolean>
                                                    </DataTrigger.Value>
                                                    <Setter Property="ContentTemplate">
                                                        <Setter.Value>
                                                            <DataTemplate>
                                                                <utils1:LoadingSpinner Width="24" Height="24" />
                                                            </DataTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <ContentControl Focusable="False" utils1:ViewBind.Model="{Binding}" />
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ContentPresenter.Style>
                                </ContentPresenter>
                            </DataTemplate>
                        </views:PaneDocumentTemplateSelector.DocumentTemplate>
                        <views:PaneDocumentTemplateSelector.AnchorableDocumentTemplate>
                            <DataTemplate>
                                <ContentControl Focusable="False" utils1:ViewBind.Model="{Binding}" DataContext="{Binding Content}" />
                            </DataTemplate>
                        </views:PaneDocumentTemplateSelector.AnchorableDocumentTemplate>
                    </views:PaneDocumentTemplateSelector>
                </DockingManager.LayoutItemTemplateSelector>

                <DockingManager.LayoutItemContainerStyleSelector>
                    <helpers:PanesStyleSelector>
                        <helpers:PanesStyleSelector.ToolStyle>
                            <Style TargetType="{x:Type LayoutAnchorableItem}">
                                <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
                                <Setter Property="Visibility" Value="{Binding Model.Visibility, Mode=TwoWay, Converter={StaticResource BooleanToHiddenVisibilityConverter}}" />
                                <Setter Property="ContentId" Value="{Binding Model.UniqueId}" />
                                <Setter Property="Title" Value="{Binding Model.Title}" />
                            </Style>
                        </helpers:PanesStyleSelector.ToolStyle>
                        <helpers:PanesStyleSelector.DocumentStyle>
                            <Style TargetType="{x:Type LayoutItem}">
                                <Setter Property="Title">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource DocumentOrToolToTitleConverter}">
                                            <Binding Path="Model.Title"/>
                                            <Binding Path="Model.IsModified"/>
                                            <Binding Path="Model.IsLoading"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                                <Setter Property="CanClose" Value="{Binding Model.CanClose}" />
                            </Style>
                        </helpers:PanesStyleSelector.DocumentStyle>
                    </helpers:PanesStyleSelector>
                </DockingManager.LayoutItemContainerStyleSelector>
                <DockingManager.DocumentHeaderTemplate>                
                    <DataTemplate>
                        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Content.IsModified}">
                                            <DataTrigger.Value>
                                                <system:Boolean>True</system:Boolean>
                                            </DataTrigger.Value>
                                            <Setter Property="FontWeight" Value="Bold"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </DataTemplate>
                </DockingManager.DocumentHeaderTemplate>  
                <LayoutRoot>
                    <LayoutPanel x:Name="VerticalPanel" Orientation="Vertical">
                        <LayoutPanel x:Name="HorizontalPanel" Orientation="Horizontal">
                            <LayoutDocumentPane />
                        </LayoutPanel>
                    </LayoutPanel>
                </LayoutRoot>
            </DockingManager>
            <views:TasksPanel DataContext="{Binding TasksViewModel}"
                              Margin="6"
                              HorizontalAlignment="Right" 
                              VerticalAlignment="Bottom"
                              Visibility="{Binding IsPanelVisible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"></views:TasksPanel>
        </Grid>
    </DockPanel>
</Controls:MetroWindow>