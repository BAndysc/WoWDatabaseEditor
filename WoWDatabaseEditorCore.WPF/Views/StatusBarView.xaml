<UserControl x:Class="WoWDatabaseEditorCore.WPF.Views.StatusBarView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:managers="clr-namespace:WDE.Common.Managers;assembly=WDE.Common"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:converters="clr-namespace:WDE.Common.WPF.Converters;assembly=WDE.Common.WPF"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:NullConverter Inverted="True" x:Key="NullConverter" />
            <Style TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,5,0" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#40000000" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#60000000" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <StatusBar Background="{DynamicResource StatusBarBackground}" 
               VerticalAlignment="Center">
        <StatusBar.ItemsPanel>
            <ItemsPanelTemplate>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                </Grid>
            </ItemsPanelTemplate>
        </StatusBar.ItemsPanel>
        <StatusBarItem VerticalContentAlignment="Stretch" VerticalAlignment="Stretch" Padding="0" Margin="0"> 
            <StackPanel Orientation="Horizontal">
                <Image Margin="10,3,10,3">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CurrentNotification.Type}"
                                             Value="{x:Static managers:NotificationType.Error}">
                                    <Setter Property="Source" Value="{DynamicResource StatusBarIconError}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentNotification.Type}"
                                             Value="{x:Static managers:NotificationType.Warning}">
                                    <Setter Property="Source" Value="{DynamicResource StatusBarIconWarning}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentNotification.Type}"
                                             Value="{x:Static managers:NotificationType.Info}">
                                    <Setter Property="Source" Value="{DynamicResource StatusBarIconNotice}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentNotification.Type}"
                                             Value="{x:Static managers:NotificationType.Success}">
                                    <Setter Property="Source" Value="{DynamicResource StatusBarIconSuccess}" />
                                </DataTrigger>

                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Button Command="{Binding CurrentNotification.ClickCommand}" IsEnabled="{Binding CurrentNotification.ClickCommand, Converter={StaticResource NullConverter}}">
                    <TextBlock Foreground="{DynamicResource StatusBarForeground}" HorizontalAlignment="Left"
                               VerticalAlignment="Center" Text="{Binding CurrentNotification.Message}" />
                </Button>
            </StackPanel>
        </StatusBarItem>
        <StatusBarItem Grid.Column="1" VerticalContentAlignment="Stretch" VerticalAlignment="Stretch" Padding="0" Margin="0">
            <Button Command="{Binding TasksViewModel.TogglePanelVisibility}">
                <TextBlock IsHitTestVisible="False" Foreground="{DynamicResource StatusBarForeground}" >
                    <Run Text="{Binding TasksViewModel.PendingTasksCount, Mode=OneWay}"/>
                    <Run Text=" tasks running in background" />
                </TextBlock>
            </Button>
        </StatusBarItem>
    </StatusBar>
</UserControl>