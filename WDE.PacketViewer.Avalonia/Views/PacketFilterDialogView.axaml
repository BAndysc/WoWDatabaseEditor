<controls1:DialogViewBase xmlns="https://github.com/avaloniaui"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:viewModels="clr-namespace:WDE.PacketViewer.ViewModels;assembly=WDE.PacketViewer"
                xmlns:controls="clr-namespace:AvaloniaStyles.Controls;assembly=AvaloniaStyles"
                xmlns:controls1="clr-namespace:WDE.Common.Avalonia.Controls;assembly=WDE.Common.Avalonia"
                xmlns:components="clr-namespace:WDE.Common.Avalonia.Components;assembly=WDE.Common.Avalonia"
                xmlns:converters="clr-namespace:WDE.PacketViewer.Avalonia.Views.Converters"
                mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
                Name="Root"
                x:DataType="viewModels:PacketFilterDialogViewModel"
                x:Class="WDE.PacketViewer.Avalonia.Views.PacketFilterDialogView">
    <DialogViewBase.KeyBindings>
        <BetterKeyBinding Gesture="Enter" CustomCommand="{CompiledBinding Accept}" />
    </DialogViewBase.KeyBindings>
    <DialogViewBase.Styles>
        <Style Selector="Expander">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>
    </DialogViewBase.Styles>
    <Grid RowDefinitions="Auto,*,Auto">
        <ScrollViewer Grid.Row="1">
            <StackPanel Spacing="10">
                <Expander Header="{CompiledBinding EntriesHeader}" HorizontalContentAlignment="Stretch">
                    <StackPanel>
                        <TextBlock TextWrapping="Wrap">
                            Comma separated list of entries. If "include entry" list is not empty, only packets with "included" entries will be displayed. If included is empty, all packets with those entries will be skipped (warning: some packets do not have entry in the viewer).
                        </TextBlock>
                        
                        <Grid ColumnDefinitions="*,5,*" RowDefinitions="Auto,*" MinHeight="300">
                            <controls:GroupingHeader Grid.Row="0" Grid.Column="0" GroupName="Excluded" />
                            <TextBox Grid.Row="1" Grid.Column="0"  Text="{CompiledBinding ExcludedEntries}" 
                                     TextWrapping="Wrap" 
                                     VerticalContentAlignment="Top" 
                                     AcceptsReturn="True" />

                            <GridSplitter Grid.Column="1" Grid.RowSpan="2" Classes="vertical"  />
                            
                            <controls:GroupingHeader Grid.Row="0" Grid.Column="2" GroupName="Included" />
                            <TextBox Grid.Row="1" Grid.Column="2"  Text="{CompiledBinding IncludedEntries}" 
                                     TextWrapping="Wrap" 
                                     VerticalContentAlignment="Top" 
                                     AcceptsReturn="True" />
                        </Grid>
                    </StackPanel>
                </Expander>
                <Expander Header="{CompiledBinding OpcodesHeader}" HorizontalContentAlignment="Stretch">
                    <StackPanel>
                        <TextBlock TextWrapping="Wrap">
                            Comma separated list of opcodes. If included list is non empty, only packets with those opcodes will be displayed. If included is empty, all packets with opcodes in excluded list will be skipped.
                        </TextBlock>
                        
                        <Grid ColumnDefinitions="*,5,*" RowDefinitions="Auto,*" MinHeight="300">
                            <controls:GroupingHeader Grid.Row="0" Grid.Column="0" GroupName="Excluded" />
                            <TextBox Grid.Row="1" Grid.Column="0"  Text="{CompiledBinding ExcludedOpcodes}" 
                                     TextWrapping="Wrap" 
                                     VerticalContentAlignment="Top" 
                                     AcceptsReturn="True" />
                    
                            <GridSplitter Grid.Column="1" Grid.RowSpan="2" Classes="vertical" />
                            
                            <controls:GroupingHeader Grid.Row="0" Grid.Column="2" GroupName="Included" />
                            <TextBox Grid.Row="1" Grid.Column="2"  Text="{CompiledBinding IncludedOpcodes}" 
                                     TextWrapping="Wrap" 
                                     VerticalContentAlignment="Top" 
                                     AcceptsReturn="True" />
                        </Grid>
                    </StackPanel>
                </Expander>
                <Expander Header="{CompiledBinding GuidsHeader}" HorizontalContentAlignment="Stretch">
                    <StackPanel>
                        <TextBlock TextWrapping="Wrap">
                            If included list is non empty, only packets with those GUIDs in them will be displayed. If included is empty, all packets with guid in excluded list will be skipped.
                        </TextBlock>
                        <Grid ColumnDefinitions="*,5,*" RowDefinitions="Auto,*" MinHeight="300">
                            <controls:GroupingHeader Grid.Row="0" Grid.Column="0" GroupName="Excluded" />
                    
                            <ListBox Grid.Row="1" Grid.Column="0"
                                     SelectionMode="Multiple"
                                     ItemsSource="{CompiledBinding  ExcludedGuids}">
                                <ListBox.KeyBindings>
                                    <KeyBinding Gesture="Back" Command="{CompiledBinding DeleteExcludedGuid}" CommandParameter="{Binding $self.SelectedItem}" />
                                    <KeyBinding Gesture="Delete" Command="{CompiledBinding DeleteExcludedGuid}" CommandParameter="{Binding $self.SelectedItem}" />
                                </ListBox.KeyBindings>
                                <ListBox.Styles>
                                    <Style Selector="ListBoxItem">
                                        <Setter Property="ContextFlyout">
                                            <Setter.Value>
                                                <MenuFlyout>
                                                    <MenuItem Header="Delete" CommandParameter="{CompiledBinding .}" Command="{Binding #Root.DataContext.DeleteExcludedGuid}" />
                                                </MenuFlyout>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListBox.Styles>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{CompiledBinding ., Converter={x:Static converters:UniversalGuidToHexConverter.Instance}}" />
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                    
                            <GridSplitter Grid.Column="1" Grid.RowSpan="2" Classes="vertical" />
                            
                            <controls:GroupingHeader Grid.Row="0" Grid.Column="2" GroupName="Included" />
                    
                            <ListBox Grid.Row="1" Grid.Column="2"
                                     SelectionMode="Multiple"
                                     ItemsSource="{CompiledBinding IncludedGuids}">
                                <ListBox.KeyBindings>
                                    <KeyBinding Gesture="Back" Command="{CompiledBinding DeleteIncludedGuid}" CommandParameter="{Binding $self.SelectedItem}" />
                                    <KeyBinding Gesture="Delete" Command="{CompiledBinding DeleteIncludedGuid}" CommandParameter="{Binding $self.SelectedItem}" />
                                </ListBox.KeyBindings>
                                <ListBox.Styles>
                                    <Style Selector="ListBoxItem">
                                        <Setter Property="ContextFlyout">
                                            <Setter.Value>
                                                <MenuFlyout>
                                                    <MenuItem Header="Delete" CommandParameter="{CompiledBinding .}" Command="{Binding #Root.DataContext.DeleteIncludedGuid}" />
                                                </MenuFlyout>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListBox.Styles>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{CompiledBinding ., Converter={x:Static converters:UniversalGuidToHexConverter.Instance}}" />
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                    </StackPanel>
                </Expander>
                
                <Expander Header="Min-max packet number" HorizontalContentAlignment="Stretch">
                    <StackPanel>
                        <TextBlock TextWrapping="Wrap">
                            Minimum and maximum packet number to include in the list.
                        </TextBlock>
                        <Grid ColumnDefinitions="Auto,5,*,20,Auto,5,*">
                            <CheckBox IsChecked="{CompiledBinding HasMinPacketNumber}" />
                            <TextBox Text="{CompiledBinding MinPacketNumber}" IsEnabled="{CompiledBinding HasMinPacketNumber}" Grid.Column="2" />
                        
                            <CheckBox IsChecked="{CompiledBinding HasMaxPacketNumber}" Grid.Column="4" />
                            <TextBox Text="{CompiledBinding MaxPacketNumber}" IsEnabled="{CompiledBinding HasMaxPacketNumber}" Grid.Column="6" />
                        </Grid>
                    </StackPanel>
                </Expander>
                
                <Expander Header="Force include packet numbers" HorizontalContentAlignment="Stretch">
                    <Grid MinHeight="250" RowDefinitions="Auto,*">
                        <TextBlock TextWrapping="Wrap">
                            Comma separated list of packet numbers that will be included, even if other conditions fail.
                        </TextBlock>
                        <TextBox Text="{CompiledBinding CommaSeparatedPackets}" TextWrapping="Wrap" VerticalContentAlignment="Top" AcceptsReturn="True" Grid.Row="1" />
                    </Grid>
                </Expander>
            </StackPanel>
        </ScrollViewer>
        <OkCancelButtons Grid.Row="2" Grid.Column="0" 
                         AcceptCommand="{CompiledBinding Accept}"
                         CancelCommand="{CompiledBinding Cancel}" />
    </Grid>
</controls1:DialogViewBase>
