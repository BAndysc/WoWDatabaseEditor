<UserControl x:Class="WDE.Solutions.Explorer.Views.SolutionExplorerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:views="clr-namespace:WDE.Solutions.Explorer.Views"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:helpers="clr-namespace:WDE.Solutions.Explorer.Helpers"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             xmlns:attached="clr-namespace:WDE.Common.WPF.Attached;assembly=WDE.Common.WPF"
             prism:ViewModelLocator.AutoWireViewModel="False" x:Name="UC">
    <UserControl.Resources>

        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <SolidColorBrush x:Key="GlyphBrush2" Color="#007ACC" />

        <!--=================================================================
     TreeViewItem
  ==================================================================-->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <!-- wrapped within canvas for bigger hit area -->
                        <DockPanel Width="15" Height="15" Background="Transparent" LastChildFill="True">
                            <Path x:Name="ExpandPath" HorizontalAlignment="Left" VerticalAlignment="Center"
                                  Margin="1,1,1,1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Data="M 4 0 L 8 4 L 4 8 Z" />
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True" />
                                    <Condition Property="IsMouseOver" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="{DynamicResource Highlight.Over.Foreground}" />
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource Highlight.Over.Foreground}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="False" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource Highlight.Over.Foreground}" />
                            </MultiTrigger>

                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="ExpandPath" Value="M 7 7 L 2 7 L 7 2 Z" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0,0,0,0" StrokeThickness="5" Stroke="Black" StrokeDashArray="1 2"
                                       Opacity="0" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="TreeViewFullRow" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment"
                    Value="{Binding Path=HorizontalContentAlignment,
              RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment"
                    Value="{Binding Path=VerticalContentAlignment,
              RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding" Value="3,3" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <ControlTemplate.Resources>
                            <views:LeftMarginMultiplierConverter Length="8" x:Key="lengthConverter" />
                        </ControlTemplate.Resources>
                        <StackPanel>
                            <Border Name="Bd" Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                <DockPanel LastChildFill="True"
                                    Margin="{Binding Converter={StaticResource lengthConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}"
                                                  IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ClickMode="Press" DockPanel.Dock="Left" Width="13" />

                                    <ContentPresenter x:Name="PART_Header" ContentSource="Header"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                </DockPanel>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" />

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                                    <i:ChangePropertyAction PropertyName="IsSelected" Value="true" TargetObject="{Binding}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false" />
                                    <Condition Property="Width" Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false" />
                                    <Condition Property="Height" Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                            </MultiTrigger>
                            <Trigger Property="helpers:MyTreeViewHelper.IsMouseDirectlyOverItem" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource Highlight.Over.Background}" />
                                <Setter Property="Foreground" Value="{DynamicResource Highlight.Over.Foreground}" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource Highlight.Background}" />
                                <Setter Property="Foreground" Value="{DynamicResource Highlight.Foreground}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true" />
                                    <Condition Property="IsSelectionActive" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource Highlight.Over.Background}" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <TreeView x:Name="tv" ItemsSource="{Binding Root}" dd:DragDrop.IsDragSource="True"
              dd:DragDrop.IsDropTarget="True" attached:GongDragAndDrop.WdeDropHandler="{Binding}" >

        <i:Interaction.Triggers>
            <i:EventTrigger EventName="SelectedItemChanged">
                <i:InvokeCommandAction Command="{Binding SelectedItemChangedCommand}"
                                       CommandParameter="{Binding ElementName=tv, Path=SelectedItem}" />
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseDoubleClick">
                <i:InvokeCommandAction Command="{Binding RequestOpenItem}"
                                       CommandParameter="{Binding ElementName=tv, Path=SelectedItem}" />
            </i:EventTrigger>
        </i:Interaction.Triggers>

        <TreeView.ItemContainerStyle>
            <Style BasedOn="{StaticResource TreeViewFullRow}" TargetType="{x:Type TreeViewItem}">
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource AncestorType=UserControl}}" />

                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu>
                            <MenuItem Header="Add"
                                      Command="{Binding PlacementTarget.Tag.DataContext.AddItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                      IsEnabled="{Binding IsContainer}" />
                            <MenuItem Header="Remove"
                                      Command="{Binding PlacementTarget.Tag.DataContext.RemoveItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                            <Separator />
                            <MenuItem Header="Generate query"
                                      Command="{Binding PlacementTarget.Tag.DataContext.GenerateSQL, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                      IsEnabled="{Binding IsExportable}" />
                            <MenuItem Header="Save to database"
                                      Command="{Binding PlacementTarget.Tag.DataContext.UpdateDatabase, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                      IsEnabled="{Binding IsExportable}" />
                            <MenuItem Header="Save to database and reload server"
                                      Command="{Binding PlacementTarget.Tag.DataContext.ExportToServer, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                      IsEnabled="{Binding IsExportable}" />
                        </ContextMenu>
                    </Setter.Value>
                </Setter>
            </Style>
        </TreeView.ItemContainerStyle>
        <TreeView.ItemTemplate>
            <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                <StackPanel Orientation="Horizontal">
                    <Image Width="14" Height="14" Margin="0,0,6,0">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsContainer}">
                                        <DataTrigger.Value>
                                            <system:Boolean>True</system:Boolean>
                                        </DataTrigger.Value>
                                        <Setter Property="Source" Value="{DynamicResource Folder}" />
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Source" Value="{DynamicResource File}" />
                            </Style>
                        </Image.Style>
                    </Image>
                    <TextBlock Padding="2" VerticalAlignment="Center" Text="{Binding ExtraId}"
                               FontFamily="Consolas" Background="{DynamicResource ContentSpecialBackground}"
                               Foreground="{DynamicResource ContentSpecialForeground}" Margin="0,0,7,0">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ExtraId}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <TextBlock Margin="0,0,0,0" Padding="0,0,0,0" VerticalAlignment="Center"
                           Text="{Binding Name}" />
                </StackPanel>
            </HierarchicalDataTemplate>
        </TreeView.ItemTemplate>
    </TreeView>
</UserControl>