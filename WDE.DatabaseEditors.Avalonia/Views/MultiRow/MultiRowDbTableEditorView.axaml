<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:controls="clr-namespace:WDE.Common.Avalonia.Controls;assembly=WDE.Common.Avalonia"
             xmlns:controls1="clr-namespace:AvaloniaStyles.Controls;assembly=AvaloniaStyles"
             xmlns:helpers="clr-namespace:WDE.DatabaseEditors.Avalonia.Helpers"
             xmlns:controls2="clr-namespace:WDE.DatabaseEditors.Avalonia.Controls"
             xmlns:styles="clr-namespace:AvaloniaStyles.Styles;assembly=AvaloniaStyles"
             xmlns:multiRow="clr-namespace:WDE.DatabaseEditors.Avalonia.Views.MultiRow"
             xmlns:converters="clr-namespace:WDE.Common.Avalonia.Converters;assembly=WDE.Common.Avalonia"
             xmlns:utils="clr-namespace:WDE.Common.Avalonia.Utils;assembly=WDE.Common.Avalonia"
             xmlns:vm="clr-namespace:WDE.DatabaseEditors.ViewModels.MultiRow;assembly=WDE.DatabaseEditors"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             Name="rootWindow"
             x:DataType="vm:MultiRowDbTableEditorViewModel"
             IsEnabled="{CompiledBinding TaskInProgress, Converter={x:Static converters:InverseBoolConverter.Instance}}"
             x:Class="WDE.DatabaseEditors.Avalonia.Views.MultiRow.MultiRowDbTableEditorView">
    <UserControl.Resources>
        <converters:BoolToIntegerConverter x:Key="BoolToInt2" TrueValue="2" FalseValue="0" />
        <converters:BoolToIntegerConverter x:Key="BoolToInt1" TrueValue="1" FalseValue="0" />
        <converters:BoolToIntegerConverter x:Key="BoolToInt1Max" TrueValue="1" FalseValue="2000000" />
        <converters:BoolToRowDefinitionsConverter x:Key="RowsConverter">
            <converters:BoolToRowDefinitionsConverter.TrueValue>
                <RowDefinitions>
                    <RowDefinition MinHeight="150" />
                    <RowDefinition Height="3" />
                    <RowDefinition Height="Auto" />
                </RowDefinitions>
            </converters:BoolToRowDefinitionsConverter.TrueValue>
            <converters:BoolToRowDefinitionsConverter.FalseValue>
                <RowDefinitions>
                    <RowDefinition />
                </RowDefinitions>
            </converters:BoolToRowDefinitionsConverter.FalseValue>
        </converters:BoolToRowDefinitionsConverter>
        <converters:BoolToColumnDefinitionsConverter x:Key="ColumnsConverter">
            <converters:BoolToColumnDefinitionsConverter.TrueValue>
                <ColumnDefinitions>
                    <ColumnDefinition MinWidth="150" />
                    <ColumnDefinition Width="3" />
                    <ColumnDefinition Width="340" />
                </ColumnDefinitions>
            </converters:BoolToColumnDefinitionsConverter.TrueValue>
            <converters:BoolToColumnDefinitionsConverter.FalseValue>
                <ColumnDefinitions>
                    <ColumnDefinition />
                </ColumnDefinitions>
            </converters:BoolToColumnDefinitionsConverter.FalseValue>
        </converters:BoolToColumnDefinitionsConverter>
        
        <ItemsPanelTemplate x:Key="HorizontalRowPanel">
            <Grid 
                KeyboardNavigation.TabNavigation="Continue"
                helpers:GridColumnsBinder.Columns="{Binding DataContext.Columns, ElementName=rootWindow}">
            </Grid>
        </ItemsPanelTemplate>
        <ItemsPanelTemplate x:Key="VerticalRowPanel">
            <controls:DynamicColumnsPanel 
                KeyboardNavigation.TabNavigation="Continue"
                MaximumColumnsCount="{Binding #rootWindow.DataContext.SplitHorizontal, Converter={StaticResource BoolToInt1Max}}" ColumnWidth="400" HorizontalSpacing="10" Spacing="5"></controls:DynamicColumnsPanel>
        </ItemsPanelTemplate>
        <DataTemplate x:Key="RowTemplate" x:DataType="vm:DatabaseEntityViewModel">
            <multiRow:SelectablePanel>
                <ItemsPresenter 
                    KeyboardNavigation.TabNavigation="Continue"
                    Items="{CompiledBinding Cells, Mode=OneTime}" 
                    ItemsPanel="{StaticResource HorizontalRowPanel}">
                    <ItemsPresenter.Styles>
                        <Style Selector="Grid > ContentPresenter" x:DataType="vm:DatabaseCellViewModel">
                            <Setter Property="(Grid.Column)" Value="{CompiledBinding ColumnIndex}" />
                        </Style>
                    </ItemsPresenter.Styles>
                </ItemsPresenter>
            </multiRow:SelectablePanel>
        </DataTemplate>
        <DataTemplate x:Key="VerticalRowTemplate" DataType="vm:DatabaseEntityViewModel">
            <ItemsPresenter 
                KeyboardNavigation.TabNavigation="Continue"
                Items="{CompiledBinding Cells, Mode=OneWay}"
                ItemsPanel="{StaticResource VerticalRowPanel}">
                <ItemsPresenter.ItemTemplate>
                    <DataTemplate x:DataType="vm:DatabaseCellViewModel">
                        <DockPanel LastChildFill="True">
                            <TextBlock Text="{CompiledBinding ColumnName, StringFormat={}{0}: }" Opacity="0.7" VerticalAlignment="Center" Width="100" FontWeight="Bold" />
                            <ContentPresenter Background="{DynamicResource ContentBackground}" BorderThickness="1" CornerRadius="4" BorderBrush="{DynamicResource TextControlBorderBrush}" Content="{CompiledBinding}" Margin="20,0,0,0" />
                        </DockPanel>

                    </DataTemplate>
                </ItemsPresenter.ItemTemplate>
            </ItemsPresenter>
        </DataTemplate>
    </UserControl.Resources>
    <UserControl.Styles>
        <styles:StyleIncludeColorAware DarkSource="avares://WDE.DatabaseEditors.Avalonia/Views/ColorsDark.axaml"
                                       LightSource="avares://WDE.DatabaseEditors.Avalonia/Views/ColorsLight.axaml"/>
        <StyleInclude Source="avares://WDE.DatabaseEditors.Avalonia/Controls/FastCellView.axaml" />
        <StyleInclude Source="avares://WDE.DatabaseEditors.Avalonia/Controls/FastBoolCellView.axaml" />
        <Style Selector="ItemsPresenter">
            <Setter Property="(KeyboardNavigation.TabNavigation)" Value="Continue" />
        </Style>
        <Style Selector="StackPanel">
            <Setter Property="(KeyboardNavigation.TabNavigation)" Value="Continue" />
        </Style>
        <Style Selector="multiRow|SelectablePanel">
            <Setter Property="Background" Value="{DynamicResource TreeViewItem.Content.Background.NormalAlternate}" />
        </Style>
        <Style Selector="multiRow|SelectablePanel.odd">
            <Setter Property="Background" Value="{DynamicResource TreeViewItem.Content.Background.Normal}" />
        </Style>
        <Style Selector="multiRow|SelectablePanel:selected">
            <Setter Property="Background" Value="{DynamicResource TreeViewItem.Content.Background.Selected}" />
        </Style>
        <Style Selector="Border.header">
            <Setter Property="Height" Value="32" />
            <Setter Property="Background" Value="{DynamicResource TextControlBackground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrush}"/>
            <Setter Property="BorderThickness" Value="0,0,0,1" />
        </Style>
        <Style Selector="Border.header GridSplitter">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border BorderThickness="0,0,1,0" 
                                Background="Transparent"
                                BorderBrush="#3F000000" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style Selector="Border.header TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Padding" Value="4" />
            <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseMediumBrush}"/>
        </Style>
        <Style Selector=":is(controls2|FastCellViewBase)">
            <Setter Property="SetNullCommand" Value="{Binding ElementName=rootWindow, Path=DataContext.SetNullCommand, Mode=OneTime}" />
            <Setter Property="RevertCommand" Value="{Binding ElementName=rootWindow, Path=DataContext.RevertCommand, Mode=OneTime}" />
            <Setter Property="DuplicateCommand" Value="{Binding ElementName=rootWindow, Path=DataContext.DuplicateCommand, Mode=OneTime}" />
            <Setter Property="RemoveTemplateCommand" Value="{Binding ElementName=rootWindow, Path=DataContext.RemoveTemplateCommand, Mode=OneTime}" />
            <Setter Property="CanBeNull" Value="{Binding CanBeSetToNull, Mode=OneTime}" />
        </Style>
    </UserControl.Styles>
    <UserControl.DataTemplates>
        <helpers:FieldValueTemplateSelector>
            <helpers:FieldValueTemplateSelector.CommandTemplate>
                <DataTemplate>
                    <controls2:ButtonFastCellView />
                </DataTemplate>
            </helpers:FieldValueTemplateSelector.CommandTemplate>
            <helpers:FieldValueTemplateSelector.BoolTemplate>
                <DataTemplate x:DataType="vm:DatabaseCellViewModel">
                    <controls2:FastBoolCellView Height="24"
                        ToolTip.Tip="{CompiledBinding OriginalValueTooltip}"
                        IsActive="True"
                        IsReadOnly="{CompiledBinding IsReadOnly, Mode=OneTime}"
                        Value="{CompiledBinding AsBoolValue}"/>
                </DataTemplate>
            </helpers:FieldValueTemplateSelector.BoolTemplate>
            <helpers:FieldValueTemplateSelector.FlagsTemplate>
                <DataTemplate x:DataType="vm:DatabaseCellViewModel">
                    <controls2:FastFlagCellView
                        Height="24"
                        SelectedItem="{CompiledBinding OptionValue, Mode=TwoWay}"
                        SelectedValue="{CompiledBinding AsLongValue, Mode=TwoWay}"
                        Flags="{CompiledBinding Flags}"
                        Padding="5,0,0,0"
                        StringValue="{CompiledBinding ParameterValue.String, FallbackValue=''}">
                    </controls2:FastFlagCellView>
                </DataTemplate>
            </helpers:FieldValueTemplateSelector.FlagsTemplate>
            <helpers:FieldValueTemplateSelector.ItemsTemplate>
                <DataTemplate x:DataType="vm:DatabaseCellViewModel">
                    <controls2:FastItemCellView
                        Height="24"
                        Value="{Binding ParameterValue.Value}"
                        SelectedItem="{CompiledBinding OptionValue, Mode=TwoWay}"
                        Items="{CompiledBinding Items}"
                        Padding="5,0,0,0"
                        StringValue="{CompiledBinding ParameterValue.String, FallbackValue=''}">
                    </controls2:FastItemCellView>
                </DataTemplate>
            </helpers:FieldValueTemplateSelector.ItemsTemplate>
            <helpers:FieldValueTemplateSelector.GenericTemplate>
                <DataTemplate x:DataType="vm:DatabaseCellViewModel">
                    <controls2:FastCellView Height="24"
                        ToolTip.Tip="{CompiledBinding OriginalValueTooltip}"
                        IsActive="True"
                        ShowChooseButton="{Binding ParameterValue.Parameter.HasItems, Mode=OneTime}"
                        IsReadOnly="{CompiledBinding IsReadOnly, Mode=OneTime}"
                        Value="{Binding ParameterValue.Value}"
                        Padding="5,0,0,0"
                        ChooseParameterCommand="{Binding ElementName=rootWindow, Path=DataContext.OpenParameterWindow, Mode=OneTime}"
                        StringValue="{CompiledBinding ParameterValue.String, FallbackValue=''}">
                    </controls2:FastCellView>
                </DataTemplate>
            </helpers:FieldValueTemplateSelector.GenericTemplate>
        </helpers:FieldValueTemplateSelector>
    </UserControl.DataTemplates>
    
    <Grid utils:GridUtils.DynamicRows="{CompiledBinding SplitVertical, Converter={StaticResource RowsConverter}}"
          utils:GridUtils.DynamicColumns="{CompiledBinding SplitHorizontal, Converter={StaticResource ColumnsConverter}}"
    >
        <ScrollViewer HorizontalScrollBarVisibility="Auto" AllowAutoHide="False">
            <DockPanel Grid.IsSharedSizeScope="True" LastChildFill="True">
                <Border Classes="header" DockPanel.Dock="Top">
                    <Grid helpers:GridColumnsBinder.ColumnsWithHeader="{CompiledBinding Columns, Mode=OneTime}" />
                </Border>
                <ItemsPresenter Items="{CompiledBinding Rows, Mode=OneTime}">
                    <ItemsPresenter.ItemTemplate>
                        <DataTemplate x:DataType="vm:DatabaseEntityViewModel">
                            <StackPanel
                                KeyboardNavigation.TabNavigation="Continue">
                                <controls1:GroupingHeader GroupName="{Binding Name, Mode=OneTime}">
                                    <controls1:GroupingHeader.CustomContent>
                                        <Button Command="{Binding ElementName=rootWindow, Path=DataContext.AddRowCommand, Mode=OneTime}" CommandParameter="{CompiledBinding ., Mode=OneTime}">+</Button>
                                    </controls1:GroupingHeader.CustomContent>
                                </controls1:GroupingHeader>
                                <controls:AlternatingItemsControl multiRow:SelectablePanel.SelectedItem="{Binding #rootWindow.DataContext.SelectedRow, Mode=TwoWay}" 
                                                                  multiRow:SelectablePanel.ObserveItems="True"
                                                                  Items="{CompiledBinding ., Mode=OneTime}" 
                                                                  ClipToBounds="False"
                                                                  MinHeight="20" 
                                                                  utils:FocusUtils.FocusFirst="True"
                                                                  ItemTemplate="{StaticResource RowTemplate}" />
                            </StackPanel>
                        </DataTemplate>
                    </ItemsPresenter.ItemTemplate>
                </ItemsPresenter>
            </DockPanel>
            <ScrollViewer.Styles>
                <Style Selector="GridSplitter">
                    <Setter Property="Focusable" Value="False"></Setter>
                    <Setter Property="Template">
                        <ControlTemplate>
                            <Border 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{DynamicResource TextControlBackground}"/>
                        </ControlTemplate>
                    </Setter>
                </Style>
            </ScrollViewer.Styles>
        </ScrollViewer>
        <GridSplitter IsVisible="{CompiledBinding SplitView}"
                      Background="#CCC"
                      Grid.Row="{CompiledBinding SplitVertical, Converter={StaticResource BoolToInt1}}" 
                      Grid.Column="{CompiledBinding SplitHorizontal, Converter={StaticResource BoolToInt1}}"  />
        <Border IsVisible="{CompiledBinding SplitView}"
                Grid.Row="{CompiledBinding SplitVertical, Converter={StaticResource BoolToInt2}}" 
                Grid.Column="{CompiledBinding SplitHorizontal, Converter={StaticResource BoolToInt2}}" 
                Background="{DynamicResource SlightlyDifferentBackground}" Padding="3">
            <DockPanel LastChildFill="True">
                <controls1:GroupingHeader GroupName="Selected row" DockPanel.Dock="Top" />
                <ScrollViewer AllowAutoHide="False" HorizontalScrollBarVisibility="Disabled" Padding="0,0,16,0">
                    <ContentControl ContentTemplate="{StaticResource VerticalRowTemplate}" Content="{CompiledBinding SelectedRow}">
            
                    </ContentControl>
                </ScrollViewer>
            </DockPanel>
            <Border.Styles>
                <Style Selector=":is(controls2|OpenableFastCellViewBase)">
                    <Setter Property="DisableDoubleClick" Value="True" />
                </Style>
            </Border.Styles>
        </Border>
    </Grid>
</UserControl>
