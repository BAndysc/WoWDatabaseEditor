version: 0.1.{build}
image: Visual Studio 2022
configuration: Release
environment:
  DEPLOY_URL:
    secure: tI50+kR1mSDCXK8B4BPyT9ArtYD3D1NAvb5/06G8mFA=  
  DEPLOY_USER:
    secure: IZcgg6msojQGCM0rLsUNTA==
  DEPLOY_KEY:
    secure: SXvCUsowLsFFH1P7e3IsqldBlcPD0gQ8qpsSM8s73VUImWk+NW0dbnLjbytCriqD6O3+FiBLKWkE/v0bNckEJkwFDU8y2ZuNjmB2NIyAQViPyi72/a3vRPM7ruJH+BY0
  REPO_TOKEN:
      secure: 0qeEEToZuwVcvYxnrAA5DeRQmdRMeYmrtmJKGUVFeTFteeMrw4z6pPUEE3wley1p
init:
  - ps: Start-Service MySQL80
install:
- cmd: git submodule update --init --recursive
before_build:
- ps: (Get-Content WoWDatabaseEditorCore.Avalonia/Services/ProgramNameService.cs) -replace 'Subtitle => ""', 'Subtitle => "for open source emulator use"' | Out-File -encoding UTF8 WoWDatabaseEditorCore.Avalonia/Services/ProgramNameService.cs
build_script:
- cmd: >-
    Rem Building WDE
    
    dotnet --list-sdks

    dotnet publish -c Release --self-contained false -f net8.0 -o bin/wowdatabaseeditor-avalonia-win/ LoaderAvalonia/LoaderAvalonia.csproj -r win-x64 -p:PublishSingleFile=true -p:PublishTrimmed=false -p:DebugType=none
      
    dotnet publish -c Release --self-contained false -f net8.0 -o bin/wowdatabaseeditor-avalonia-mac/ LoaderAvalonia/LoaderAvalonia.csproj -r osx-x64
      
    dotnet publish -c Release --self-contained false -f net8.0 -o bin/wowdatabaseeditor-avalonia-linux/ LoaderAvalonia/LoaderAvalonia.csproj -r linux-x64 -p:PublishSingleFile=true -p:PublishTrimmed=false -p:DebugType=none
      
    dotnet publish -c Release --self-contained false -f net8.0 -o bin/wowdatabaseeditor-avalonia-win/ Modules/CrashReport/CrashReport.csproj -r win-x64 -p:PublishSingleFile=true -p:PublishTrimmed=false -p:DebugType=none
     
    dotnet publish -c Release --self-contained false -f net8.0 -o bin/wowdatabaseeditor-avalonia-mac/ Modules/CrashReport/CrashReport.csproj -r osx-x64
   
    dotnet publish -c Release --self-contained false -f net8.0 -o bin/wowdatabaseeditor-avalonia-linux/ Modules/CrashReport/CrashReport.csproj -r linux-x64 -p:PublishSingleFile=true -p:PublishTrimmed=false -p:DebugType=none
      
    dotnet publish -c Release --self-contained false -f net8.0 -o bin/wowdatabaseeditor-avalonia-win/ Updater/Updater.csproj -r win-x64 -p:PublishSingleFile=true -p:PublishTrimmed=false -p:DebugType=none

    dotnet publish -c Release --self-contained false -f net8.0 -o bin/wowdatabaseeditor-avalonia-mac/ Updater/Updater.csproj -r osx-x64

    dotnet publish -c Release --self-contained false -f net8.0 -o bin/wowdatabaseeditor-avalonia-linux/ Updater/Updater.csproj -r linux-x64 -p:PublishSingleFile=true -p:PublishTrimmed=false -p:DebugType=none
    
    dotnet publish -c Release --self-contained false -f net8.0 -o bin/wowdatabaseeditor-avalonia-win/parser WoWPacketParserLoader -r win-x64
      
    dotnet publish -c Release --self-contained false -f net8.0 -o bin/wowdatabaseeditor-avalonia-mac/parser WoWPacketParserLoader -r osx-x64
      
    dotnet publish -c Release --self-contained false -f net8.0 -o bin/wowdatabaseeditor-avalonia-linux/parser WoWPacketParserLoader -r linux-x64
    
    rename bin\wowdatabaseeditor-avalonia-mac\Updater _Updater
    
    rename bin\wowdatabaseeditor-avalonia-linux\Updater _Updater

    rename bin\wowdatabaseeditor-avalonia-win\Updater.exe _Updater.exe
      
    rename bin\wowdatabaseeditor-avalonia-mac\WoWDatabaseEditor WoWDatabaseEditorCore.Avalonia

    rename bin\wowdatabaseeditor-avalonia-linux\WoWDatabaseEditor WoWDatabaseEditorCore.Avalonia

    rename bin\wowdatabaseeditor-avalonia-win\WoWDatabaseEditor.exe WoWDatabaseEditorCore.Avalonia.exe
       
    git clone https://%REPO_TOKEN%@github.com/BAndysc/WoWDatabaseEditorExtras --recurse-submodules
    
    cd WoWDatabaseEditorExtras/WoWDatabaseEditor
    
    git checkout %APPVEYOR_REPO_COMMIT%
    
    cd ../
    
    mkdir modules
    
    dotnet publish WDE.Github/WDE.Github.csproj -o modules/ -c Release -f net8.0
    
    cp modules/WDE.Github.dll ../bin/wowdatabaseeditor-avalonia-win/WDE.Github.dll
      
    cp modules/WDE.Github.dll ../bin/wowdatabaseeditor-avalonia-mac/WDE.Github.dll
      
    cp modules/WDE.Github.dll ../bin/wowdatabaseeditor-avalonia-linux/WDE.Github.dll
    
    cd ../

    cd bin\wowdatabaseeditor-avalonia-win\

    del /f AvaloniaStyles.exe AvaloniaStyles.deps.json AvaloniaStyles.runtimeconfig.json *.pdb Dock.* WoWDatabaseEditorCore.Avalonia.GUI.exe WoWDatabaseEditorCore.Avalonia.GUI.runtimeconfig.json WoWDatabaseEditorCore.Avalonia.GUI.deps.json WoWPacketParserLoader.exe WoWPacketParserLoader.deps.json

    cd ..\..\

    FOR %%A IN (bin\wowdatabaseeditor-avalonia-win\app.ini,bin\wowdatabaseeditor-avalonia-mac\app.ini,bin\wowdatabaseeditor-avalonia-linux\app.ini) DO (echo COMMIT=%APPVEYOR_REPO_COMMIT% >> %%A & echo BRANCH=%APPVEYOR_REPO_BRANCH% >> %%A & echo VERSION=%APPVEYOR_BUILD_VERSION% >> %%A & echo BUILD_VERSION=%APPVEYOR_BUILD_NUMBER% >> %%A & echo UPDATE_SERVER=%DEPLOY_URL% >> %%A & echo MARKETPLACE=default >> %%A & echo MAPDATA_SERVER=%DEPLOY_URL% >> %%A)

    FOR %%A IN (bin\wowdatabaseeditor-avalonia-win\parser,bin\wowdatabaseeditor-avalonia-mac\parser,bin\wowdatabaseeditor-avalonia-linux\parser) DO ( mkdir %%A\Parsers & cd %%A & ( FOR %%X in (WowPacketParserModule.*) DO ( move %%X Parsers\%%X ) ) & cd ..\..\..\ )

    echo PLATFORM=Windows >> bin/wowdatabaseeditor-avalonia-win/app.ini

    echo PLATFORM=MacOs >> bin/wowdatabaseeditor-avalonia-mac/app.ini

    echo PLATFORM=Linux >> bin/wowdatabaseeditor-avalonia-linux/app.ini
      
    curl -fsSL -o bin/wowdatabaseeditor-avalonia-win/storm.dll https://github.com/BAndysc/StormCascLibBinary/releases/download/windows/StormLib.dll
      
    curl -fsSL -o bin/wowdatabaseeditor-avalonia-win/casc.dll https://github.com/BAndysc/StormCascLibBinary/releases/download/windows/CascLib.dll
      
    curl -fsSL -o bin/wowdatabaseeditor-avalonia-linux/libstorm.so https://github.com/BAndysc/StormCascLibBinary/releases/download/linux/libstorm.so
  
    curl -fsSL -o bin/wowdatabaseeditor-avalonia-linux/libcasc.so https://github.com/BAndysc/StormCascLibBinary/releases/download/linux/libcasc.so
      
    mkdir bin\wowdatabaseeditor-avalonia-win\sqls
      
    curl -fsSL -o bin/wowdatabaseeditor-avalonia-win/sqls/sqls.tar.gz https://github.com/BAndysc/sqls/releases/download/v0.2.22/sqls_0.2.22_Windows_x86_64.tar.gz
      
    7z x bin/wowdatabaseeditor-avalonia-win/sqls/sqls.tar.gz -so | 7z x -si -ttar -obin/wowdatabaseeditor-avalonia-win/sqls/
      
    del /f bin\wowdatabaseeditor-avalonia-win\sqls\sqls.tar.gz
    
    Rem Mac OS Bundle

    mkdir "WoW Database Editor.app"

    mkdir "WoW Database Editor.app\Contents"

    mkdir "WoW Database Editor.app\Contents\MacOS"

    mkdir "WoW Database Editor.app\Contents\Resources"

    copy WoWDatabaseEditorCore.Avalonia\Resources\Info.plist "WoW Database Editor.app\Contents"

    copy WoWDatabaseEditorCore.Avalonia\Resources\icon.icns "WoW Database Editor.app\Contents\Resources"

    move bin\wowdatabaseeditor-avalonia-mac\* "WoW Database Editor.app\Contents\MacOS"

    for /d %%a in (bin\wowdatabaseeditor-avalonia-mac\*) do move "%%~fa" "WoW Database Editor.app\Contents\MacOS"

    7z a WoWDatabaseEditorWindows.zip .\bin\wowdatabaseeditor-avalonia-win\*
    
    7z a WoWDatabaseEditorMacOs.zip "WoW Database Editor.app\"
    
    7z a WoWDatabaseEditorLinux.zip .\bin\wowdatabaseeditor-avalonia-linux\*
test_script:
- cmd: >-
    cd test
    
    bash database_test.sh localhost 3306 root 'Password12!' 'C:\Program Files\MySQL\MySQL Server 8.0\bin\mysql'

    cd ../

    dotnet test WDE.MVVM.Test/WDE.MVVM.Test.csproj

    dotnet test WDE.RemoteSOAP.Test/WDE.RemoteSOAP.Test.csproj

    dotnet test WDE.SmartScriptEditor.Test/WDE.SmartScriptEditor.Test.csproj

    dotnet test WDE.Updater.Test/WDE.Updater.Test.csproj

    dotnet test WDE.Parameters.Test/WDE.Parameters.Test.csproj

    dotnet test WDE.SqlQueryGenerator.Test/WDE.SqlQueryGenerator.Test.csproj

    dotnet test WDE.SqlInterpreter.Test/WDE.SqlInterpreter.Test.csproj

    dotnet test WDE.Common.Test/WDE.Common.Test.csproj
      
    dotnet test Modules/WDE.SqlWorkbench.Test/WDE.SqlWorkbench.Test.csproj

    dotnet test Rendering/TheEngine.Test/TheEngine.Test.csproj

    dotnet test WDE.WoWHeadConnector.Test/WDE.WoWHeadConnector.Test.csproj

    dotnet test WoWDatabaseEditorCore.Test/WoWDatabaseEditorCore.Test.csproj
      
    dotnet test Modules/WDE.DatabaseEditors.Test/WDE.DatabaseEditors.Test.csproj
      
    dotnet test Modules/WDE.Debugger.Test/WDE.Debugger.Test.csproj
      
    Rem dotnet test Modules/WDE.PacketViewer.Test/WDE.PacketViewer.Test.csproj
artifacts:
- path: WoWDatabaseEditorMacOs.zip
  name: WoWDatabaseEditorMacOs.zip
- path: WoWDatabaseEditorWindows.zip
  name: WoWDatabaseEditorWindows.zip
- path: WoWDatabaseEditorLinux.zip
  name: WoWDatabaseEditorLinux.zip
deploy_script:
- cmd: >-
    IF NOT "%DEPLOY_KEY%" == "" curl -X POST "%DEPLOY_URL%/Upload" -H "accept: */*" -H "Content-Type: multipart/form-data" -F "branch=%APPVEYOR_REPO_BRANCH%" -F "marketplace=default" -F "platform=windows" -F "version=%APPVEYOR_BUILD_NUMBER%" -F "versionName=Build %APPVEYOR_BUILD_VERSION%" -F "user=%DEPLOY_USER%" -F "key=%DEPLOY_KEY%" -F "files=@WoWDatabaseEditorWindows.zip;type=application/zip"
    
    IF NOT "%DEPLOY_KEY%" == "" curl -X POST "%DEPLOY_URL%/Upload" -H "accept: */*" -H "Content-Type: multipart/form-data" -F "branch=%APPVEYOR_REPO_BRANCH%" -F "marketplace=default" -F "platform=macos" -F "version=%APPVEYOR_BUILD_NUMBER%" -F "versionName=Build %APPVEYOR_BUILD_VERSION%" -F "user=%DEPLOY_USER%" -F "key=%DEPLOY_KEY%" -F "files=@WoWDatabaseEditorMacOs.zip;type=application/zip" -F "make_exec=WoW Database Editor.app/Contents/MacOS/WoWDatabaseEditorCore.Avalonia"
    
    IF NOT "%DEPLOY_KEY%" == "" curl -X POST "%DEPLOY_URL%/Upload" -H "accept: */*" -H "Content-Type: multipart/form-data" -F "branch=%APPVEYOR_REPO_BRANCH%" -F "marketplace=default" -F "platform=linux" -F "version=%APPVEYOR_BUILD_NUMBER%" -F "versionName=Build %APPVEYOR_BUILD_VERSION%" -F "user=%DEPLOY_USER%" -F "key=%DEPLOY_KEY%" -F "files=@WoWDatabaseEditorLinux.zip;type=application/zip" -F "make_exec=WoWDatabaseEditorCore.Avalonia" -F "make_exec=_Updater" -F "make_exec=parser/WowPacketParser"
    
    IF NOT "%DEPLOY_KEY%" == "" curl -X POST "%DEPLOY_URL%/Changelog/Add" -H  "accept: */*" -H  "Content-Type: application/json" -d "{\"version\":{\"branch\":\"%APPVEYOR_REPO_BRANCH%\",\"marketplace\":\"default\",\"version\":%APPVEYOR_BUILD_NUMBER%},\"user\":{\"user\":\"%DEPLOY_USER%\",\"key\":\"%DEPLOY_KEY%\"},\"entry\":\"%APPVEYOR_REPO_COMMIT_MESSAGE%%APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED%\"}"
