<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:extendedTextBlock="clr-namespace:WDE.Common.Avalonia.Controls;assembly=WDE.Common.Avalonia"
        xmlns:views="clr-namespace:WDE.SmartScriptEditor.Avalonia.Editor.Views"
        xmlns:controls="clr-namespace:WDE.SmartScriptEditor.Avalonia.Editor.UserControls"
        xmlns:editing="clr-namespace:WDE.SmartScriptEditor.Avalonia.Editor.Views.Editing"
        xmlns:styles="clr-namespace:AvaloniaStyles.Styles;assembly=AvaloniaStyles"
        xmlns:converters="clr-namespace:WDE.Common.Avalonia.Converters;assembly=WDE.Common.Avalonia"
        xmlns:themes="clr-namespace:WDE.SmartScriptEditor.Avalonia.Themes"
        xmlns:controls1="clr-namespace:AvaloniaStyles.Controls;assembly=AvaloniaStyles"
        xmlns:editing1="clr-namespace:WDE.SmartScriptEditor.Editor.ViewModels.Editing;assembly=WDE.SmartScriptEditor"
        xmlns:models="clr-namespace:WDE.SmartScriptEditor.Models;assembly=WDE.SmartScriptEditor"
        xmlns:extensions="clr-namespace:WDE.SmartScriptEditor.Avalonia.Extensions"
        xmlns:utils="clr-namespace:WDE.Common.Avalonia.Utils;assembly=WDE.Common.Avalonia">

    <Styles.Resources>
        <!-- this is later also used in SmartScriptPanelLayout measurement, for performance reasons-->
        <themes:IndentToMarginConverter x:Key="IndentToMarginConverter" LeftMultiplier="24" />
        <converters:NullConverter x:Key="NullToBoolConverter" Inverted="True" />
        <converters:IntToBoolConverter x:Key="TimerToBoolConverter" TrueValue="1" FalseValue="0" UnknownValues="True" />
        <converters:EmptyStringToBoolConverter x:Key="EmptyStringToBoolConverter" WhenNullOrEmpty="False" />
        <converters:NumberToThicknessConverter x:Key="NumberToMarginConverter" Left="10" />
        <DrawingImage x:Key="BoxIcons.RegularWorld">
            <GeometryDrawing  Brush="#30000000" Geometry="F1M189.055999755859,-557.611022949219C177.322998046875,-523.179016113281,170.667007446289,-486.356994628906,170.667007446289,-448L170.666000366211,-448.001007080078C170.666000366211,-274.263000488281,301.269012451172,-130.731994628906,469.3330078125,-109.611999511719L469.3330078125,-192.001007080078 341.3330078125,-320.001007080078 341.3330078125,-405.334014892578 189.055999755859,-557.611022949219z M640,-764.202026367188L640,-746.666015625C640,-699.56201171875,601.77099609375,-661.3330078125,554.6669921875,-661.3330078125L512,-661.3330078125 512,-618.666015625C512,-571.56201171875,473.77099609375,-533.3330078125,426.6669921875,-533.3330078125L426.6669921875,-405.3330078125 597.333984375,-405.3330078125C644.43798828125,-405.3330078125,682.6669921875,-367.10400390625,682.6669921875,-320L682.6669921875,-277.3330078125C711.97900390625,-277.3330078125,754.218994140625,-262.528015136719,782.080017089844,-240.085006713867L782.080017089844,-240.083999633789C826.580993652344,-297.726989746094 853.3330078125,-369.705993652344 853.3330078125,-447.998992919922 853.3330078125,-590.932983398438 764.927978515625,-713.471008300781 640,-764.202026367188z M512,-874.6669921875C747.263977050781,-874.6669921875 938.6669921875,-683.263977050781 938.6669921875,-448 938.6669921875,-212.735992431641 747.263977050781,-21.3330001831055 512,-21.3329925537109 276.735992431641,-21.3330001831055 85.3330001831055,-212.735992431641 85.3330001831055,-448 85.3330001831055,-683.263977050781 276.735992431641,-874.6669921875 512,-874.6669921875z"   />
        </DrawingImage>
    </Styles.Resources>
    
    <styles:StyleIncludeColorAware DarkSource="avares://WDE.SmartScriptEditor.Avalonia/Themes/ColorsDark.axaml"
                                   LightSource="avares://WDE.SmartScriptEditor.Avalonia/Themes/ColorsLight.axaml"/>

    <Style Selector="controls|SmartActionView:action">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <ControlTemplate x:DataType="models:SmartAction">
                <Border BorderThickness="0,1,1,1" Classes="action" 
                        Padding="{CompiledBinding Indent, Converter={StaticResource IndentToMarginConverter}}">
                    <extendedTextBlock:FormattedTextBlock
                        ContextArray="{CompiledBinding Context}"
                        IsSelected="{CompiledBinding IsSelected}"
                        Padding="2"
                        Background="{TemplateBinding SpecialBackground}"
                        Text="{CompiledBinding Readable}" />
                </Border>
            </ControlTemplate>
        </Setter>
    </Style>
    <Style Selector="controls|SmartActionView:comment">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <ControlTemplate x:DataType="models:SmartAction">
                <Border BorderThickness="0,1,1,1" Classes="comment">
                    <TextBlock TextWrapping="Wrap"
                               Padding="2"
                               FontFamily="Consolas,Monaco"
                               Text="{CompiledBinding Comment}" />
                </Border>
            </ControlTemplate>
        </Setter>
    </Style>
    <Style Selector="controls|SmartActionView:action Border">
        <Setter Property="BorderBrush" Value="{DynamicResource SmartScripts.Action.Border}" />
    </Style>
    <Style Selector="controls|SmartActionView:comment Border">
        <Setter Property="BorderBrush" Value="{DynamicResource SmartScripts.Comment.Border}" />
        <Setter Property="Background" Value="{DynamicResource SmartScripts.Comment.Background}" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource SmartScripts.Comment.Foreground}" />
    </Style>
    <Style Selector="controls|SmartActionView:action /template/ Border">
        <Setter Property="Background" Value="{DynamicResource SmartScripts.Action.Background}" />
    </Style>
    <Style Selector="controls|SmartActionView:action:selected /template/ Border">
        <Setter Property="BorderBrush" Value="{DynamicResource SmartScripts.Action.Selected.Border}" />
    </Style>
    <Style Selector="controls|SmartActionView:comment:selected /template/ Border">
        <Setter Property="Background" Value="{DynamicResource SmartScripts.Comment.Selected.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SmartScripts.Comment.Selected.Border}" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource SmartScripts.Comment.Selected.Foreground}" />
    </Style>
    <Style Selector="controls|SmartActionView:action:selected /template/ extendedTextBlock|FormattedTextBlock">
        <Setter Property="Background" Value="{DynamicResource SmartScripts.Action.Selected.Background}" />
    </Style>
    <Style Selector="controls|SmartActionView:action /template/ extendedTextBlock|FormattedTextBlock:overlink">
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style Selector="controls|SmartConditionView">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <ControlTemplate x:DataType="models:SmartCondition">
                <Border BorderThickness="1" Margin="{CompiledBinding Indent, Converter={StaticResource NumberToMarginConverter}}">
                    <extendedTextBlock:FormattedTextBlock Padding="2"
                                                          Background="{TemplateBinding SpecialBackground}"
                                                          ContextArray="{CompiledBinding Context}"
                                                          IsSelected="{CompiledBinding IsSelected}"
                                                          Text="{CompiledBinding Readable}" />
                </Border>
            </ControlTemplate>
        </Setter>
    </Style>
    <Style Selector="controls|SmartConditionView /template/ Border">
        <Setter Property="BorderBrush" Value="{DynamicResource SmartScripts.Action.Border}" />
        <Setter Property="Background" Value="{DynamicResource SmartScripts.Action.Background}" />
    </Style>
    <Style Selector="controls|SmartConditionView:selected /template/ Border">
        <Setter Property="BorderBrush" Value="{DynamicResource SmartScripts.Action.Selected.Border}" />
    </Style>
    <Style Selector="controls|SmartConditionView:selected /template/ extendedTextBlock|FormattedTextBlock">
        <Setter Property="Background" Value="{DynamicResource SmartScripts.Action.Selected.Background}" />
    </Style>
    <Style Selector="controls|SmartConditionView /template/ extendedTextBlock|FormattedTextBlock:overlink">
        <Setter Property="Cursor" Value="Hand" />
    </Style>
    
    <Style Selector="controls|MiniEventIcon">
        <Setter Property="Background" Value="#1976d2" />
        <Setter Property="Template">
            <ControlTemplate>
                <Panel Width="12" Height="12" Margin="2,0,0,0">
                    <Ellipse Fill="{TemplateBinding Background}" ToolTip.Tip=""></Ellipse>
                    <TextBlock Foreground="{DynamicResource SmartScripts.Event.Flag.Foreground}" 
                               Margin="0,1,0,0" 
                               FontSize="9" 
                               TextAlignment="Left"
                               VerticalAlignment="Center" Text="{TemplateBinding Text}"/>
                </Panel>
            </ControlTemplate>
        </Setter>
    </Style>
    
    <Style Selector="controls|SmartGroupView">
        <Setter Property="Template">
            <ControlTemplate>
                <Border Name="PART_Border" BorderThickness="1" CornerRadius="4" Padding="6">
                    <DockPanel>
                        <controls:ToggleAllCheckBox DockPanel.Dock="Left" 
                                                    AltCommand="{TemplateBinding ToggleAllCommand}"
                                                    IsChecked="{TemplateBinding IsExpanded, Mode=TwoWay}" />
                        <TextBlock FontWeight="Bold" FontSize="14" Text="{TemplateBinding Header}" DockPanel.Dock="Top" TextWrapping="WrapWithOverflow" />
                        <TextBlock Opacity="0.8" Text="{TemplateBinding Description}" IsVisible="{TemplateBinding Description, Converter={x:Static NullConverter.IsNotNull}}" TextWrapping="WrapWithOverflow" />
                    </DockPanel>
                </Border>
            </ControlTemplate>
        </Setter>
    </Style>
    <Style Selector="controls|SmartGroupView /template/ Border#PART_Border">
        <Setter Property="Background" Value="{DynamicResource SmartScripts.Group.Background}" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource SmartScripts.Group.Foreground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SmartScripts.Group.Border}" />
    </Style>
    <Style Selector="controls|SmartGroupView:selected /template/ Border#PART_Border">
        <Setter Property="BorderBrush" Value="{DynamicResource SmartScripts.Group.Selected.Border}" />
        <Setter Property="Background" Value="{DynamicResource SmartScripts.Group.Selected.Background}" />
    </Style>
    
    <Style Selector="controls|SmartEventView">
        <Setter Property="Template">
            <ControlTemplate x:DataType="models:SmartEvent">
                <DockPanel LastChildFill="True">
                    <Border Name="Main" BorderThickness="1" CornerRadius="4,0,0,4" DockPanel.Dock="Top">
                        <Border Padding="5" Background="{TemplateBinding SpecialBackground}" Name="Inner">
                            <DockPanel LastChildFill="True">
                                <controls:SmartEventFlagsView Margin="2,0,0,0" TextElement.Foreground="{DynamicResource SmartScripts.Event.Flag.Background}" DockPanel.Dock="Right"/>
                                <Border ToolTip.Tip="Event chance" Margin="2,0,0,0" VerticalAlignment="Center" CornerRadius="3" Background="{DynamicResource SmartScripts.Event.Chance.Background}" DockPanel.Dock="Right" IsVisible="{CompiledBinding ChanceString, Converter={StaticResource NullToBoolConverter}}">
                                    <TextBlock Padding="2,1" Foreground="White" FontWeight="Bold" FontSize="11" Text="{CompiledBinding ChanceString}"/>
                                </Border>
                                <Border ToolTip.Tip="Timer ID" Padding="4,1,4,1" VerticalAlignment="Center" CornerRadius="10" Background="{DynamicResource SmartScripts.Event.Timer.Background}" DockPanel.Dock="Right" IsVisible="{CompiledBinding TimerIdNumber, Converter={StaticResource TimerToBoolConverter}}">
                                    <TextBlock Foreground="White" FontWeight="Bold" FontSize="11" Text="{CompiledBinding TimerIdNumber}"/>
                                </Border>
                                <extendedTextBlock:FormattedTextBlock
                                    ContextArray="{CompiledBinding Context}"
                                    IsSelected="{CompiledBinding IsSelected}"
                                    Text="{CompiledBinding Readable}" />
                            </DockPanel>
                        </Border>
                    </Border>
                    <Border Name="Filler" CornerRadius="0,0,4,4" Margin="20,0,0,0" />
                </DockPanel>
            </ControlTemplate>
        </Setter>
    </Style>
    <Style Selector="controls|SmartEventView /template/ Border#Main">
        <Setter Property="Background" Value="{DynamicResource SmartScripts.Event.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SmartScripts.Event.Border}" />
    </Style>
    <Style Selector="controls|SmartEventView /template/ Border#Filler">
        <Setter Property="Background" Value="{DynamicResource SmartScripts.Condition.Background}" />
    </Style>
    <Style Selector="controls|SmartEventView:selected /template/ Border#Main">
        <Setter Property="BorderBrush" Value="{DynamicResource SmartScripts.Event.Selected.Border}" />
    </Style>
    <Style Selector="controls|SmartEventView:selected /template/ Border#Inner">
        <Setter Property="Background" Value="{DynamicResource SmartScripts.Event.Selected.Background}" />
    </Style>
    <Style Selector="controls|SmartEventView:selected /template/ Border#Filler">
        <Setter Property="Background" Value="{DynamicResource SmartScripts.Event.Selected.Border}" />
    </Style>

    <Style Selector="controls|SmartEventView /template/ extendedTextBlock|FormattedTextBlock:overlink">
        <Setter Property="Cursor" Value="Hand" />
    </Style>
    
    
    <Style Selector="controls|GlobalVariableView">
        <Setter Property="Template">
            <ControlTemplate>
                <Border Name="PART_Var" BorderThickness="1" DockPanel.Dock="Top" Padding="5">
                    <DockPanel LastChildFill="True">
                        <Image MinWidth="15" Source="{StaticResource BoxIcons.RegularWorld}" Width="15" Height="15" Margin="0,0,5,0"/>
                        <TextBlock TextWrapping="Wrap" IsVisible="{Binding Comment, Converter={StaticResource EmptyStringToBoolConverter}}" DockPanel.Dock="Right" Opacity="0.8" FontStyle="Italic" MaxWidth="300" MinWidth="60" Text="{Binding Comment, Mode=OneWay}" />
                        <TextBlock TextWrapping="Wrap" MinWidth="60" Text="{Binding Readable, Mode=OneWay}" />
                    </DockPanel>
                </Border>
            </ControlTemplate>
        </Setter>
    </Style>
    <Style Selector="controls|GlobalVariableView.first Border#PART_Var">
        <Setter Property="CornerRadius" Value="6,6,0,0" />
    </Style>
    <Style Selector="controls|GlobalVariableView.last Border#PART_Var">
        <Setter Property="CornerRadius" Value="0, 0, 6,6" />
    </Style>
    <Style Selector="controls|GlobalVariableView.first.last Border#PART_Var">
        <Setter Property="CornerRadius" Value="6,6,6,6" />
    </Style>
    <Style Selector="controls|GlobalVariableView Border#PART_Var">
        <Setter Property="BorderBrush" Value="{DynamicResource SmartScripts.Comment.Border}" />
        <Setter Property="Background" Value="{DynamicResource SmartScripts.Comment.Background}" />
    </Style>
    <Style Selector="controls|GlobalVariableView:selected /template/ Border#PART_Var">
        <Setter Property="Background" Value="{DynamicResource SmartScripts.Comment.Selected.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SmartScripts.Comment.Selected.Border}" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource SmartScripts.Comment.Selected.Foreground}" />
    </Style>
    
    
    <Style Selector="editing|ParameterEditorView">
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="HoldsMultipleValues" Value="{Binding HoldsMultipleValues}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel>
                        <TextBlock Margin="4" Width="100" DockPanel.Dock="Left" HorizontalAlignment="Right" VerticalAlignment="Center"
                                   TextWrapping="Wrap" Text="{Binding Name, Mode=OneWay}" />
                        <ContentPresenter Content="{Binding}">
                            <ContentPresenter.DataTemplates>
                                <views:ParameterDataTemplateSelector>
                                    <views:ParameterDataTemplateSelector.Generic>
                                        <DataTemplate>
                                            <extendedTextBlock:ParameterValueHolderView
                                                DataContext="{Binding Parameter}"
                                                Tag="{Binding Tag, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=editing:ParameterEditorView}}"
                                                SpecialCopying="{Binding DataContext.SpecialCopying, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=editing:ParameterEditorView}, FallbackValue=False}" 
                                                SpecialCommand="{Binding DataContext.SpecialCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=editing:ParameterEditorView}, FallbackValue=False}" 
                                                PickCommand="{Binding DataContext.SelectItemAction, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=editing:ParameterEditorView}}" />
                                        </DataTemplate>
                                    </views:ParameterDataTemplateSelector.Generic>
                                    <views:ParameterDataTemplateSelector.BoolParameter>
                                        <DataTemplate>
                                            <CheckBox Focusable="True" VerticalContentAlignment="Center" HorizontalAlignment="Stretch"
                                                      DataContext="{Binding Parameter}"
                                                      utils:Fix.DetachDataContext="True"
                                                      IsChecked="{Binding Value, Converter={x:Static converters:CommonConverters.LongToBoolConverter}}" />
                                        </DataTemplate>
                                    </views:ParameterDataTemplateSelector.BoolParameter>
                                    <views:ParameterDataTemplateSelector.FlagParameter>
                                        <DataTemplate>
                                            <extendedTextBlock:FlagComboBox SelectedItem="{Binding Parameter.String}" SelectedValue="{Binding Parameter.Value}" Watermark="{Binding Parameter.Value}"  Flags="{Binding Parameter.Items}" />
                                        </DataTemplate>
                                    </views:ParameterDataTemplateSelector.FlagParameter>
                                    <views:ParameterDataTemplateSelector.ItemsParameter>
                                        <DataTemplate>
                                            <controls1:CompletionComboBox editing:ParameterEditorView.OnEnterPressed="true" AsyncPopulator="{x:Static extensions:SmartScriptCompletionCombobox.AsyncPopulator}" SelectedItem="{Binding OptionValue}" Watermark="{Binding OptionValue, Converter={x:Static extensions:ParameterOptionConverter.Instance}}" Items="{Binding Items}" />
                                        </DataTemplate>
                                    </views:ParameterDataTemplateSelector.ItemsParameter>
                                    <views:ParameterDataTemplateSelector.ButtonParameter>
                                        <DataTemplate>
                                            <Button Command="{Binding Command}" Content="{Binding ActionName}" />
                                        </DataTemplate>
                                    </views:ParameterDataTemplateSelector.ButtonParameter>
                                    <views:ParameterDataTemplateSelector.NumberedButtonParameter>
                                        <DataTemplate x:DataType="editing1:NumberedEditableParameterActionViewModel">
                                            <DockPanel>
                                                <extendedTextBlock:ParameterValueHolderView DockPanel.Dock="Right" Margin="5,0,0,0"
                                                    DataContext="{CompiledBinding Value}" />
                                                <Button Command="{CompiledBinding Command}" Content="{CompiledBinding ActionName}" />
                                            </DockPanel>
                                        </DataTemplate>
                                    </views:ParameterDataTemplateSelector.NumberedButtonParameter>
                                </views:ParameterDataTemplateSelector>
                            </ContentPresenter.DataTemplates>
                        </ContentPresenter>

                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style Selector="editing|ParameterEditorView.multiplevalues CompletionComboBox">
        <Setter Property="BorderBrush" Value="Red" />
    </Style>
    
    <Style Selector="editing|ParameterEditorView.multiplevalues TextBox">
        <Setter Property="BorderBrush" Value="Red" />
    </Style>

    <Style Selector="views|SmartScriptEditorView Button /template/ ContentPresenter#PART_ContentPresenter">
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="BoxShadow" Value="none" />
    </Style>
</Styles>