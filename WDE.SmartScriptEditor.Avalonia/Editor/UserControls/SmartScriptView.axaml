<UserControl x:Class="WDE.SmartScriptEditor.Avalonia.Editor.UserControls.SmartScriptView"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:WDE.SmartScriptEditor.Editor.ViewModels"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             xmlns:userControls="clr-namespace:WDE.SmartScriptEditor.Avalonia.Editor.UserControls"
             xmlns:models="clr-namespace:WDE.SmartScriptEditor.Models;assembly=WDE.SmartScriptEditor"
             xmlns:viewModels1="clr-namespace:WDE.SmartScriptEditor.Editor.ViewModels;assembly=WDE.SmartScriptEditor"
             xmlns:views="clr-namespace:WDE.SmartScriptEditor.Avalonia.Editor.Views"
             x:DataType="viewModels1:SmartScriptEditorViewModel"
             mc:Ignorable="d" x:Name="Rooot"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <system:Boolean x:Key="FalseValue">False</system:Boolean>
        <system:Boolean x:Key="TrueValue">True</system:Boolean>
        <FloatToScaleTransformConverter x:Key="FloatToScaleTransformConverter" />
        <views:ColorIdToNiceColorConverter x:Key="ColorIdToNiceColorConverter" />
    </UserControl.Resources>
    <UserControl.KeyBindings>
        <KeyBinding Gesture="Back" Command="{CompiledBinding DeleteSelected}" />
        <KeyBinding Gesture="Delete" Command="{CompiledBinding DeleteSelected}" />
        <KeyBinding Gesture="Enter" Command="{CompiledBinding EditSelected}" />
        <KeyBinding Gesture="Ctrl+Shift+N" Command="{CompiledBinding NewActionAboveCommand}" />
        <KeyBinding Gesture="Ctrl+N" Command="{CompiledBinding NewActionBelowCommand}" />
        <KeyBinding Gesture="Ctrl+Shift+E" Command="{CompiledBinding NewEventAboveCommand}" />
        <KeyBinding Gesture="Ctrl+E" Command="{CompiledBinding NewEventBelowCommand}" />
        <KeyBinding Gesture="Ctrl+A" Command="{CompiledBinding SelectAll}" />
        <KeyBinding Gesture="Ctrl+Up" Command="{CompiledBinding SelectionUp}"
                    CommandParameter="{StaticResource TrueValue}" />
        <KeyBinding Gesture="Ctrl+Down" Command="{CompiledBinding SelectionDown}"
                    CommandParameter="{StaticResource TrueValue}" />
        <KeyBinding Gesture="Shift+Up" Command="{CompiledBinding SelectionUp}"
                    CommandParameter="{StaticResource TrueValue}" />
        <KeyBinding Gesture="Shift+Down" Command="{CompiledBinding SelectionDown}"
                    CommandParameter="{StaticResource TrueValue}" />
        <KeyBinding Gesture="Right" Command="{CompiledBinding SelectionRight}" />
        <KeyBinding Gesture="Left" Command="{CompiledBinding SelectionLeft}" />
        <KeyBinding Gesture="Up" Command="{CompiledBinding SelectionUp}" CommandParameter="{StaticResource FalseValue}" />
        <KeyBinding Gesture="Down" Command="{CompiledBinding SelectionDown}" CommandParameter="{StaticResource FalseValue}" />
        <KeyBinding Gesture="Ctrl+G" Command="{CompiledBinding GroupSelectedEventsCommand}" />

    </UserControl.KeyBindings>

    <UserControl.Styles>
        <Style Selector="Button.FlatButton">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
        </Style>
        <Style Selector="Button.FlatButton:pointerover /template/ ContentPresenter">
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent" />
        </Style>
        <Style Selector="Button.FlatButton:pressed /template/ ContentPresenter">
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent" />
        </Style>
    </UserControl.Styles>
    <userControls:InverseRenderTransformPanel
        RenderTransformOrigin="0, 0"
        RenderTransform="{CompiledBinding Scale, Converter={StaticResource FloatToScaleTransformConverter}}"
        >
        <Panel>
            <DockPanel ContextRequested="Control_OnContextRequested">
                <DockPanel.ContextMenu>
                    <FixedContextMenu>
                        <MenuItem WdeImage.MenuIcon="Icons/icon_above.png" Command="{CompiledBinding NewActionAboveCommand}" IsVisible="{CompiledBinding AnyEventOrActionSelected}" Header="New action above" />
                        <MenuItem WdeImage.MenuIcon="Icons/icon_below.png" Command="{CompiledBinding NewActionBelowCommand}" IsVisible="{CompiledBinding AnyEventOrActionSelected}" Header="New action below" />
                        <Separator IsVisible="{CompiledBinding AnyEventOrActionSelected}" />
                        <MenuItem WdeImage.MenuIcon="Icons/icon_event_above.png" IsVisible="{CompiledBinding AnySelected}" Command="{CompiledBinding NewEventAboveCommand}" Header="New event above" />
                        <MenuItem WdeImage.MenuIcon="Icons/icon_event_below.png" Command="{CompiledBinding NewEventBelowCommand}" Header="New event below" />
                        <Separator />
                        <MenuItem WdeImage.MenuIcon="Icons/icon_group_above.png" IsVisible="{CompiledBinding AnySelected}" Command="{CompiledBinding NewGroupAboveCommand}" Header="New group above" />
                        <MenuItem WdeImage.MenuIcon="Icons/icon_group_below.png" Command="{CompiledBinding NewGroupBelowCommand}" Header="New group below" />
                        <Separator />
                        <MenuItem WdeImage.MenuIcon="Icons/icon_comment_above.png" Command="{CompiledBinding NewCommentAboveCommand}" IsVisible="{CompiledBinding AnyEventOrActionSelected}" Header="New comment above" />
                        <MenuItem WdeImage.MenuIcon="Icons/icon_comment_below.png" Command="{CompiledBinding NewCommentBelowCommand}" IsVisible="{CompiledBinding AnyEventOrActionSelected}" Header="New comment below" />
                        <Separator IsVisible="{CompiledBinding AnyEventOrActionSelected}" />
                        <MenuItem WdeImage.MenuIcon="Icons/document_link.png" Command="{CompiledBinding ToggleBreakableLinkCommand}"
                                  Header="Toggle non-breakable link flag">
                            <MenuItem.IsVisible>
                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                    <CompiledBinding Path="AnySelected" />
                                    <CompiledBinding Path="SupportsNonBreakableLinks" />
                                </MultiBinding>
                            </MenuItem.IsVisible>
                        </MenuItem>
                        <MenuItem WdeImage.MenuIcon="Icons/document_link.png" Command="{CompiledBinding AddLinkCommand}" IsVisible="{CompiledBinding AnySelected}"  Header="Add link" />
                        <MenuItem WdeImage.MenuIcon="Icons/document_conditions.png" Command="{CompiledBinding EditConditionsCommand}" Header="Edit conditions" />
                        <MenuItem WdeImage.MenuIcon="Icons/icon_hash.png" Command="{CompiledBinding DefineGlobalVariable}" Header="Define a global variable" />
                        <MenuItem WdeImage.MenuIcon="Icons/icon_edit.png" Header="Edit event definition" Command="{CompiledBinding OpenSelectedEventDefinitionEditor}">
                            <MenuItem.IsVisible>
                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                    <CompiledBinding Path="AnyEventSelected" />
                                    <CompiledBinding Path="SupportsDefinitionEditor" />
                                </MultiBinding>
                            </MenuItem.IsVisible>
                        </MenuItem>
                        <MenuItem WdeImage.MenuIcon="Icons/icon_edit.png" Header="Edit definition">
                            <MenuItem.IsVisible>
                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                    <CompiledBinding Path="AnyActionExclusiveSelected" />
                                    <CompiledBinding Path="SupportsDefinitionEditor" />
                                </MultiBinding>
                            </MenuItem.IsVisible>
                            <MenuItem Header="Edit action" Command="{CompiledBinding OpenSelectedActionDefinitionEditor}" />
                            <MenuItem Header="Edit source" Command="{CompiledBinding OpenSelectedSourceDefinitionEditor}" />
                            <MenuItem Header="Edit target" Command="{CompiledBinding OpenSelectedTargetDefinitionEditor}" />
                        </MenuItem>
                        <Separator />
                        <MenuItem WdeImage.MenuIcon="Icons/icon_copy.png" Command="{CompiledBinding Copy}" Header="Copy" />
                        <MenuItem WdeImage.MenuIcon="Icons/icon_cut.png" Command="{CompiledBinding Cut}" Header="Cut" />
                        <MenuItem WdeImage.MenuIcon="Icons/icon_paste.png" Command="{CompiledBinding Paste}" Header="Paste" />
                        <Separator />
                        <MenuItem WdeImage.MenuIcon="Icons/icon_delete.png" Command="{CompiledBinding DeleteSelected}" Header="Delete" />
                    </FixedContextMenu>
                </DockPanel.ContextMenu>
                <userControls:VirtualizedSmartScriptPanel Background="Transparent"
                                                          Focusable="True"
                                                          DropGroups="{CompiledBinding OnDropGroups}"
                                                          DropItems="{CompiledBinding OnDropItems}"
                                                          DropActions="{CompiledBinding OnDropActions}"
                                                          DropConditions="{CompiledBinding OnDropConditions}"
                                                          Script="{CompiledBinding Script}"
                                                          Problems="{CompiledBinding ProblematicLines}"
                                                          Breakpoints="{CompiledBinding Breakpoints}"
                                                          HideComments="{CompiledBinding HideComments}"
                                                          HideConditions="{CompiledBinding HideConditions}"
                                                          Name="SmartPanel"
                                                          DockPanel.Dock="Top">
                    <userControls:VirtualizedSmartScriptPanel.EventItemTemplate>
                        <DataTemplate DataType="{x:Type models:SmartEvent}">
                            <userControls:SmartEventView
                                SpecialBackground="{CompiledBinding ColorId, Converter={StaticResource ColorIdToNiceColorConverter}}"
                                Selected="{CompiledBinding IsSelected, Mode=TwoWay}"
                                userControls:VirtualizedSmartScriptPanel.Selected="{CompiledBinding IsSelected, Mode=TwoWay}"
                                DirectEditParameter="{Binding DataContext.DirectEditParameter, ElementName=Rooot}"
                                DirectOpenParameter="{Binding DataContext.DirectOpenParameter, ElementName=Rooot}"
                                DeselectActionsOfDeselectedEventsRequest="{Binding DataContext.DeselectAllButEvents, ElementName=Rooot}"
                                DeselectAllRequest="{Binding DataContext.DeselectAll, ElementName=Rooot}"
                                IsSelected="{CompiledBinding IsSelected, Mode=TwoWay}"
                                EditEventCommand="{Binding DataContext.EditEvent, ElementName=Rooot}"
                                IsHitTestVisible="True"/>
                        </DataTemplate>
                    </userControls:VirtualizedSmartScriptPanel.EventItemTemplate>
                    <userControls:VirtualizedSmartScriptPanel.ActionItemTemplate>
                        <DataTemplate DataType="{x:Type models:SmartAction}">
                            <userControls:SmartActionView
                                SpecialBackground="{CompiledBinding ColorId, Converter={StaticResource ColorIdToNiceColorConverter}}"
                                Indent="{CompiledBinding Indent}"
                                DirectEditParameter="{Binding DataContext.DirectEditParameter, ElementName=Rooot}"
                                DirectOpenParameter="{Binding DataContext.DirectOpenParameter, ElementName=Rooot}"
                                userControls:SelectableTemplatedControl.DeselectAllRequest="{Binding DataContext.DeselectAll, ElementName=Rooot}"
                                DeselectAllButActionsRequest="{Binding DataContext.DeselectAllButActions, ElementName=Rooot}"
                                EditActionCommand="{Binding DataContext.EditAction, ElementName=Rooot}"
                                IsSelected="{CompiledBinding IsSelected, Mode=TwoWay}"
                                userControls:VirtualizedSmartScriptPanel.Selected="{CompiledBinding IsSelected, Mode=TwoWay}"
                            />
                        </DataTemplate>
                    </userControls:VirtualizedSmartScriptPanel.ActionItemTemplate>
                    <userControls:VirtualizedSmartScriptPanel.ConditionItemTemplate>
                        <DataTemplate DataType="{x:Type models:SmartCondition}">
                            <userControls:SmartConditionView
                                SpecialBackground="{CompiledBinding ColorId, Converter={StaticResource ColorIdToNiceColorConverter}}"
                                DirectEditParameter="{Binding DataContext.DirectEditParameter, ElementName=Rooot}"
                                DeselectAllRequest="{Binding DataContext.DeselectAll, ElementName=Rooot}"
                                DeselectAllButConditionsRequest="{Binding DataContext.DeselectAllButConditions, ElementName=Rooot}"
                                EditConditionCommand="{Binding DataContext.EditCondition, ElementName=Rooot}"
                                userControls:VirtualizedSmartScriptPanel.Selected="{CompiledBinding IsSelected, Mode=TwoWay}"
                                IsSelected="{CompiledBinding IsSelected, Mode=TwoWay}"
                                />
                        </DataTemplate>
                    </userControls:VirtualizedSmartScriptPanel.ConditionItemTemplate>
                    <userControls:VirtualizedSmartScriptPanel.GroupItemTemplate>
                        <DataTemplate x:DataType="models:SmartGroup">
                            <userControls:SmartGroupView IsExpanded="{CompiledBinding IsExpanded, Mode=TwoWay}"
                                                         Header="{CompiledBinding Header}"
                                                         IsSelected="{CompiledBinding IsSelected, Mode=TwoWay}"
                                                         DeselectAllButGroupsRequest="{Binding DataContext.DeselectAllButGroups, ElementName=Rooot}"
                                                         DeselectAllRequest="{Binding DataContext.DeselectAll, ElementName=Rooot}"
                                                         ToggleAllCommand="{Binding DataContext.ToggleAllGroups, ElementName=Rooot}"
                                                         Description="{CompiledBinding Description}">
                            </userControls:SmartGroupView>
                        </DataTemplate>
                    </userControls:VirtualizedSmartScriptPanel.GroupItemTemplate>
                    <userControls:VirtualizedSmartScriptPanel.VariableItemTemplate>
                        <DataTemplate DataType="{x:Type models:GlobalVariable}">
                            <userControls:GlobalVariableView
                                DeselectAllRequest="{Binding DataContext.DeselectAll, ElementName=Rooot}"
                                DeselectAllButGlobalVariablesRequest="{Binding DataContext.DeselectAllButGlobalVariables, ElementName=Rooot}"
                                userControls:VirtualizedSmartScriptPanel.Selected="{CompiledBinding IsSelected, Mode=TwoWay}"
                                IsSelected="{CompiledBinding IsSelected, Mode=TwoWay}"
                                Script="{Binding DataContext.Script, ElementName=Rooot}"
                            />
                        </DataTemplate>
                    </userControls:VirtualizedSmartScriptPanel.VariableItemTemplate>
                    <userControls:VirtualizedSmartScriptPanel.NewActionItemTemplate>
                        <DataTemplate DataType="{x:Type viewModels1:NewActionViewModel}">
                            <Button Classes="FlatButton"
                                    Content="Add action"
                                    Opacity="0.5"
                                    HorizontalAlignment="Stretch"
                                    Command="{Binding DataContext.AddAction, ElementName=Rooot}"
                                    CommandParameter="{CompiledBinding}">
                            </Button>
                        </DataTemplate>
                    </userControls:VirtualizedSmartScriptPanel.NewActionItemTemplate>
                    <userControls:VirtualizedSmartScriptPanel.NewConditionItemTemplate>
                        <DataTemplate DataType="{x:Type viewModels1:NewConditionViewModel}">
                            <Button Classes="FlatButton"
                                    Content="Add condition"
                                    Opacity="0.5"
                                    Command="{Binding DataContext.AddCondition, ElementName=Rooot}"
                                    CommandParameter="{CompiledBinding}">
                            </Button>
                        </DataTemplate>
                    </userControls:VirtualizedSmartScriptPanel.NewConditionItemTemplate>
                </userControls:VirtualizedSmartScriptPanel>
                <Button
                    Grid.Row="1"
                    Classes="FlatButton"
                    Opacity="0.5"
                    Width="{Binding #SmartPanel.EventsWidth}"
                    Content="Add event"
                    Command="{CompiledBinding AddEvent}">
                </Button>
            </DockPanel>
            <userControls:SmartScriptOverlay
                HideConditions="{CompiledBinding HideConditions}"
                FindText="{CompiledBinding SearchText}"
                Script="{CompiledBinding Script}" />
        </Panel>
    </userControls:InverseRenderTransformPanel>
</UserControl>
